import{_ as s,o as a,c as n,O as l}from"./chunks/framework.16797aa5.js";const h=JSON.parse('{"title":"变体","description":"变体允许您对现有规则应用一些变体","frontmatter":{"title":"变体","description":"变体允许您对现有规则应用一些变体"},"headers":[],"relativePath":"config/variants.md","lastUpdated":1682572606000}'),p={name:"config/variants.md"},o=l(`<h1 id="变体" tabindex="-1">变体 <a class="header-anchor" href="#变体" aria-label="Permalink to &quot;变体&quot;">​</a></h1><p><a href="https://windicss.org/utilities/general/variants.html" target="_blank" rel="noreferrer">变体</a> 允许您对现有的规则应用一些变化，例如 Tailwind 中的 <code>hover:</code> 变体。</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">variants</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// hover:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">(</span><span style="color:#BD976A;">matcher</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#BD976A;">matcher</span><span style="color:#666666;">.</span><span style="color:#80A665;">startsWith</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">hover:</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">))</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">matcher</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 去掉前缀并将其传递给下一个变体和规则</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">matcher</span><span style="color:#666666;">: </span><span style="color:#BD976A;">matcher</span><span style="color:#666666;">.</span><span style="color:#80A665;">slice</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">6</span><span style="color:#666666;">),</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#80A665;">selector</span><span style="color:#666666;">: </span><span style="color:#BD976A;">s</span><span style="color:#666666;"> =&gt; </span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">s</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">:hover</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">    }</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#80A665;">rules</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">[</span><span style="color:#C98A7D99;">/</span><span style="color:#4D9375;">^</span><span style="color:#C4704F;">m-</span><span style="color:#666666;">(</span><span style="color:#C99076;">\\d</span><span style="color:#666666;">)</span><span style="color:#4D9375;">$</span><span style="color:#C98A7D99;">/</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">([,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">d</span><span style="color:#666666;">])</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({ </span><span style="color:#B8A965;">margin</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">d </span><span style="color:#CB7676;">/</span><span style="color:#C98A7D;"> </span><span style="color:#4C9A91;">4</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">rem</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;"> })],</span></span>
<span class="line"><span style="color:#666666;">]</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">variants</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// hover:</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">(</span><span style="color:#B07D48;">matcher</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">matcher</span><span style="color:#999999;">.</span><span style="color:#59873A;">startsWith</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">hover:</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">))</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">matcher</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 去掉前缀并将其传递给下一个变体和规则</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">matcher</span><span style="color:#999999;">: </span><span style="color:#B07D48;">matcher</span><span style="color:#999999;">.</span><span style="color:#59873A;">slice</span><span style="color:#999999;">(</span><span style="color:#2F798A;">6</span><span style="color:#999999;">),</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#59873A;">selector</span><span style="color:#999999;">: </span><span style="color:#B07D48;">s</span><span style="color:#999999;"> =&gt; </span><span style="color:#B5695999;">\`</span><span style="color:#999999;">\${</span><span style="color:#B56959;">s</span><span style="color:#999999;">}</span><span style="color:#B56959;">:hover</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    }</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#59873A;">rules</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">[</span><span style="color:#B5695999;">/</span><span style="color:#1E754F;">^</span><span style="color:#AB5E3F;">m-</span><span style="color:#999999;">(</span><span style="color:#A65E2B;">\\d</span><span style="color:#999999;">)</span><span style="color:#1E754F;">$</span><span style="color:#B5695999;">/</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">([,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">d</span><span style="color:#999999;">])</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">({ </span><span style="color:#998418;">margin</span><span style="color:#999999;">: </span><span style="color:#B5695999;">\`</span><span style="color:#999999;">\${</span><span style="color:#B56959;">d </span><span style="color:#AB5959;">/</span><span style="color:#B56959;"> </span><span style="color:#2F798A;">4</span><span style="color:#999999;">}</span><span style="color:#B56959;">rem</span><span style="color:#B5695999;">\`</span><span style="color:#999999;"> })],</span></span>
<span class="line"><span style="color:#999999;">]</span></span></code></pre></div><ul><li><code>matcher</code> 控制变体何时启用。如果返回值是字符串，则将其用作匹配规则的选择器。</li><li><code>selector</code> 提供了自定义生成的 CSS 选择器的可用性。</li></ul><h2 id="内部实现" tabindex="-1">内部实现 <a class="header-anchor" href="#内部实现" aria-label="Permalink to &quot;内部实现&quot;">​</a></h2><p>让我们看看匹配 <code>hover:m-2</code> 时发生了什么：</p><ul><li>用户使用中提取了 <code>hover:m-2</code></li><li><code>hover:m-2</code> 发送给所有变体进行匹配</li><li><code>hover:m-2</code> 被我们的变体匹配并返回 <code>m-2</code></li><li>结果 <code>m-2</code> 将用于下一轮变体匹配</li><li>如果没有其他变体匹配，<code>m-2</code> 将继续匹配规则</li><li>第一条规则匹配并生成 <code>.m-2 { margin: 0.5rem; }</code></li><li>最后，我们将我们的变体转换应用于生成的 CSS。在这种情况下，我们将 <code>:hover</code> 前缀添加到 <code>selector</code> 钩子中。</li></ul><p>因此，将生成以下 CSS：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">.</span><span style="color:#BD976A;">hover</span><span style="color:#C99076;">\\:</span><span style="color:#BD976A;">m-2</span><span style="color:#666666;">:</span><span style="color:#BD976A;">hover</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">margin</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">0.5</span><span style="color:#CB7676;">rem</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">hover</span><span style="color:#A65E2B;">\\:</span><span style="color:#B07D48;">m-2</span><span style="color:#999999;">:</span><span style="color:#B07D48;">hover</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">margin</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0.5</span><span style="color:#AB5959;">rem</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p>这样，只有当用户悬停在元素上时，才会应用 <code>m-2</code>。</p><h2 id="进一步了解" tabindex="-1">进一步了解 <a class="header-anchor" href="#进一步了解" aria-label="Permalink to &quot;进一步了解&quot;">​</a></h2><p>变体系统非常强大，本指南无法完全涵盖。您可以查看 <a href="https://github.com/unocss/unocss/tree/main/packages/preset-mini/src/_variants" target="_blank" rel="noreferrer">默认预设的实现</a> 以了解更高级的用法。</p>`,13),e=[o];function c(r,t,y,i,A,d){return a(),n("div",null,e)}const B=s(p,[["render",c]]);export{h as __pageData,B as default};
