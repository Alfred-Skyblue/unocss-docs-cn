import{_ as s,o as a,c as n,N as e}from"./chunks/framework.fcd62fc8.js";const p=JSON.parse('{"title":"为什么选择 UnoCSS？","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/why.md","lastUpdated":1681962075000}'),o={name:"guide/why.md"},i=e('<h1 id="为什么选择-unocss" tabindex="-1">为什么选择 UnoCSS？ <a class="header-anchor" href="#为什么选择-unocss" aria-label="Permalink to &quot;为什么选择 UnoCSS？&quot;">​</a></h1><h2 id="动机" tabindex="-1">动机 <a class="header-anchor" href="#动机" aria-label="Permalink to &quot;动机&quot;">​</a></h2><p>我们建议您阅读由 UnoCSS 的创建者 <a href="https://antfu.me/" target="_blank" rel="noreferrer">Anthony Fu</a> 撰写的博客文章 <a href="https://antfu.me/posts/reimagine-atomic-css-zh" target="_blank" rel="noreferrer">Reimagine Atomic CSS</a>，以更好地理解 UnoCSS 背后的动机。</p><h2 id="unocss-与其他框架的不同之处" tabindex="-1">UnoCSS 与其他框架的不同之处 <a class="header-anchor" href="#unocss-与其他框架的不同之处" aria-label="Permalink to &quot;UnoCSS 与其他框架的不同之处&quot;">​</a></h2><h3 id="windi-css" tabindex="-1">Windi CSS <a class="header-anchor" href="#windi-css" aria-label="Permalink to &quot;Windi CSS&quot;">​</a></h3><p>UnoCSS 由 <a href="https://windicss.org/" target="_blank" rel="noreferrer">Windi CSS</a> 团队的成员创建，灵感来源于我们在 Windi CSS 中的工作。虽然 Windi CSS 在 2023 年 3 月停止了维护，但您可以将 UnoCSS 看作是 Windi CSS 的&quot;精神继承者&quot;。</p><p>UnoCSS 继承了 Windi 的按需自然样式、<a href="/unocss-docs-cn/presets/attributify">属性模式</a>、<a href="/unocss-docs-cn/config/shortcuts">快捷方式</a>、<a href="/unocss-docs-cn/transformers/variant-group">变体组</a>、<a href="/unocss-docs-cn/transformers/compile-class">编译模式</a>等特性，并在此基础上构建了极具可扩展性和性能的 UnoCSS，从而引入了新的功能，如<a href="/unocss-docs-cn/presets/icons">纯 CSS 图标</a>、<a href="/unocss-docs-cn/presets/attributify#valueless-attributify">无值属性模式</a>、<a href="/unocss-docs-cn/presets/tagify">标签化</a>、<a href="/unocss-docs-cn/presets/web-fonts">Web 字体</a>等。</p><p>最重要的是，UnoCSS 作为一种原子级 CSS 引擎，所有的功能都是可选的，并且可以轻松创建自己的约定、设计系统和预设 - 您可以选择需要的功能组合。</p><h3 id="tailwind-css" tabindex="-1">Tailwind CSS <a class="header-anchor" href="#tailwind-css" aria-label="Permalink to &quot;Tailwind CSS&quot;">​</a></h3><p>Windi CSS 和 UnoCSS 都从<a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">Tailwind CSS</a>中汲取了很多灵感。由于 UnoCSS 是从头开始构建的，因此我们可以很好地了解原子 CSS 是如何通过前期的艺术和抽象转化为优雅且强大的 API 的。虽然 Tailwind CSS 和 UnoCSS 有不同的设计目标，因此无法直接进行比较，但我们将列举一些差异:</p><p>Tailwind CSS 是一个 PostCSS 插件，而 UnoCSS 是一个具有多种一流构建工具集成的同构引擎（包括<a href="/unocss-docs-cn/integrations/postcss">PostCSS 插件</a>）。这意味着 UnoCSS 可以在不同的地方更加灵活地使用（例如，<a href="/unocss-docs-cn/integrations/runtime">CDN 运行时</a>，可以动态生成 CSS），并且可以与构建工具深度集成，提供更好的 HMR、性能和开发者体验（例如，<a href="/unocss-docs-cn/tools/inspector">Inspector</a>）。</p><p>从技术上讲，抛开权衡不谈，UnoCSS 也被设计成完全可扩展和可定制化，而 Tailwind CSS 则更加偏向于一种观点。在 Tailwind CSS 上构建自定义设计系统（或设计令牌）可能会很困难，你无法真正摆脱 Tailwind CSS 的约定。而在 UnoCSS 上，您可以完全控制地构建几乎任何您想要的东西。例如，我们在一个<a href="/unocss-docs-cn/presets/wind">单一的预设</a>中实现了整个与 Tailwind CSS 兼容的工具，而且还有许多其他有趣哲学的<a href="/unocss-docs-cn/presets/community">社区预设</a>。</p><p>由于 UnoCSS 提供的灵活性，我们能够在其上尝试许多创新功能，例如：</p><ul><li><a href="/unocss-docs-cn/presets/icons">纯 CSS 图标</a></li><li><a href="/unocss-docs-cn/presets/attributify">属性模式</a></li><li><a href="/unocss-docs-cn/transformers/variant-group">变体组</a></li><li><a href="/unocss-docs-cn/config/shortcuts">快捷方式</a></li><li><a href="/unocss-docs-cn/presets/tagify">标签化</a></li><li><a href="/unocss-docs-cn/presets/web-fonts">Web 字体</a></li><li><a href="/unocss-docs-cn/integrations/runtime">CDN 运行时</a></li><li><a href="/unocss-docs-cn/tools/inspector">检查器</a></li></ul><p>UnoCSS 相较于 Tailwind CSS 的缺点是不支持 Tailwind 的插件系统或配置，这意味着从一个定制化程度很高的 Tailwind CSS 项目迁移可能会更加困难。这是一个有意的决策，旨在使 UnoCSS 高性能和可扩展，我们相信这种权衡是值得的。</p>',15),t=[i];function r(c,S,d,l,h,u){return a(),n("div",null,t)}const C=s(o,[["render",r]]);export{p as __pageData,C as default};
